[{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"背景\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%83%8C%E6%99%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e背景\u003c/h1\u003e\n\n\u003cp\u003e一部のSQL実行時に\u003ccode\u003eMysql2::Error: Incorrect key file for table '/rdsdbdata/tmp/#sql_69c6_2.MYI'; try to repair it\u003c/code\u003eというエラーが発生するようになった．全てのSQLにおいて起きるわけではない．\u003cbr\u003e\n\u0026lt;!-- 何をしようとしてこの問題に遭遇したかを簡単に説明してください --\u0026gt;\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"問題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%95%8F%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e問題\u003c/h1\u003e\n\n\u003cp\u003e\u003ccode\u003echeck table xxx\u003c/code\u003eしても問題なかったため，テーブルが壊れているわけではない．\u003cbr\u003e\n原因はストレージ容量(tmpdirの容量)が不足していることだった．(tmpdirはSQL実行時の一時バッファ?)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"解法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解法\u003c/h1\u003e\n\n\u003cp\u003eRDSのAllocated Storageを増やす．これはRDSを稼動させたまま変更することもできる．\u003cbr\u003e\nRDSでないならば，tmpdirの余計なファイルを削除すればよさそう．\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参考リンク\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考リンク\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ModifyInstance.MySQL.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eModifying a DB Instance Running the MySQL Database Engine - Amazon Relational Database Service\u003c/a\u003e\u003c/p\u003e\n","body":"# 背景\n一部のSQL実行時に`Mysql2::Error: Incorrect key file for table '/rdsdbdata/tmp/#sql_69c6_2.MYI'; try to repair it`というエラーが発生するようになった．全てのSQLにおいて起きるわけではない．\n\u003c!-- 何をしようとしてこの問題に遭遇したかを簡単に説明してください --\u003e\n\n# 問題\n`check table xxx`しても問題なかったため，テーブルが壊れているわけではない．\n原因はストレージ容量(tmpdirの容量)が不足していることだった．(tmpdirはSQL実行時の一時バッファ?)\n\n# 解法\nRDSのAllocated Storageを増やす．これはRDSを稼動させたまま変更することもできる．\nRDSでないならば，tmpdirの余計なファイルを削除すればよさそう．\n\n# 参考リンク\n[Modifying a DB Instance Running the MySQL Database Engine - Amazon Relational Database Service](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ModifyInstance.MySQL.html)\n","coediting":false,"comments_count":0,"created_at":"2014-02-04T09:17:15+09:00","group":null,"id":"f6c78c01ee8c988a9f7a","likes_count":9,"private":false,"reactions_count":0,"tags":[{"name":"MySQL","versions":[]},{"name":"RDS","versions":[]}],"title":"RDSで`Mysql2::Error: Incorrect key file for table '/rdsdbdata/tmp/...'; try to repair it`というエラーに対応する","updated_at":"2014-02-04T09:17:15+09:00","url":"https://qiita.com/yaotti/items/f6c78c01ee8c988a9f7a","user":{"description":"Qiitaを作っているIncrements株式会社の創業者、CEO、エンジニア","facebook_id":"yaotti","followees_count":273,"followers_count":956,"github_login_name":"yaotti","id":"yaotti","items_count":151,"linkedin_id":"yaotti","location":"東京","name":"海野 弘成","organization":"Increments inc","permanent_id":1,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/1/profile-images/1473681698","team_only":false,"twitter_screen_name":"yaotti","website_url":"http://yaotti.hatenablog.com"},"page_views_count":null},{"rendered_body":"\n\u003ch2\u003e\n\u003cspan id=\"auto_cd\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#auto_cd\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eAUTO_CD\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003esetopt AUTO_CD\u003c/code\u003eの1行を\u003ccode\u003e~/.zshrc\u003c/code\u003eに設定しておくと，ディレクトリ移動時に\u003ccode\u003ecd\u003c/code\u003eを打たなくても，ディレクトリと解釈できる文字列を打てば\u003ccode\u003ecd\u003c/code\u003eしてくれる\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e~/.zshrc\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esetopt AUTO_CD\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003efoo/bar/baz \u003cspan class=\"c\"\u003e# 設定前\u003c/span\u003e\nfoo/bar/baz    \u003cspan class=\"c\"\u003e# 設定後\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれにより\u003ccode\u003ecd\u003c/code\u003eはホームディレクトリに移動するとき以外は使う必要がなくなる．ディレクトリ名がコマンド名と被ってしまうようなときは\u003ccode\u003e./ruby\u003c/code\u003eのように指定すればよい．\u003ccode\u003ecd ruby\u003c/code\u003eよりは楽．\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"cdpath\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cdpath\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecdpath\u003c/h2\u003e\n\n\u003cp\u003eそして\u003ccode\u003eAUTO_CD\u003c/code\u003eに\u003ccode\u003ecdpath\u003c/code\u003eを合わせて設定するとより強力\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e~/.zshrc\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esetopt AUTO_CD\n\u003cspan class=\"nv\"\u003ecdpath\u003c/span\u003e\u003cspan class=\"o\"\u003e=(\u003c/span\u003e.. ~ ~/src\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこの2行を追加しておけば，親ディレクトリやホームディレクトリ，~/src以下へはどこからでもディレクトリ名だけで移動できるようになる．プロジェクト間の移動も一瞬．\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"マニュアル\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%9E%E3%83%8B%E3%83%A5%E3%82%A2%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eマニュアル\u003c/h2\u003e\n\n\u003cp\u003e一応マニュアルへの参照を．それぞれ\u003ccode\u003eman zshoptions\u003c/code\u003e, \u003ccode\u003eman zshparam\u003c/code\u003eに載っている．\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ man zshoptions\n...\n AUTO_CD (-J)\n              If a command is issued that can't be executed as a normal command, and the command is the name of a directory, perform the cd command to that directory.\n...\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ man zshparam\n...\ncdpath \u0026lt;S\u0026gt; \u0026lt;Z\u0026gt; (CDPATH \u0026lt;S\u0026gt;)\n              An array (colon-separated list) of directories specifying the search path for the cd command.\n...\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n","body":"## AUTO_CD\n`setopt AUTO_CD`の1行を`~/.zshrc`に設定しておくと，ディレクトリ移動時に`cd`を打たなくても，ディレクトリと解釈できる文字列を打てば`cd`してくれる\n\n```zsh:~/.zshrc\nsetopt AUTO_CD\n```\n\n```zsh\ncd foo/bar/baz # 設定前\nfoo/bar/baz    # 設定後\n```\n\nこれにより`cd`はホームディレクトリに移動するとき以外は使う必要がなくなる．ディレクトリ名がコマンド名と被ってしまうようなときは`./ruby`のように指定すればよい．`cd ruby`よりは楽．\n\n## cdpath\nそして`AUTO_CD`に`cdpath`を合わせて設定するとより強力\n\n```zsh:~/.zshrc\nsetopt AUTO_CD\ncdpath=(.. ~ ~/src)\n```\n\nこの2行を追加しておけば，親ディレクトリやホームディレクトリ，~/src以下へはどこからでもディレクトリ名だけで移動できるようになる．プロジェクト間の移動も一瞬．\n\n## マニュアル\n一応マニュアルへの参照を．それぞれ`man zshoptions`, `man zshparam`に載っている．\n\n```\n$ man zshoptions\n...\n AUTO_CD (-J)\n              If a command is issued that can't be executed as a normal command, and the command is the name of a directory, perform the cd command to that directory.\n...\n```\n\n```\n$ man zshparam\n...\ncdpath \u003cS\u003e \u003cZ\u003e (CDPATH \u003cS\u003e)\n              An array (colon-separated list) of directories specifying the search path for the cd command.\n...\n```\n","coediting":false,"comments_count":0,"created_at":"2013-12-20T23:54:15+09:00","group":null,"id":"157ff0a46736ec793a91","likes_count":73,"private":false,"reactions_count":0,"tags":[{"name":"Zsh","versions":[]}],"title":"ディレクトリ移動を手軽にするauto cdとcdpath","updated_at":"2013-12-20T23:54:15+09:00","url":"https://qiita.com/yaotti/items/157ff0a46736ec793a91","user":{"description":"Qiitaを作っているIncrements株式会社の創業者、CEO、エンジニア","facebook_id":"yaotti","followees_count":273,"followers_count":956,"github_login_name":"yaotti","id":"yaotti","items_count":151,"linkedin_id":"yaotti","location":"東京","name":"海野 弘成","organization":"Increments inc","permanent_id":1,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/1/profile-images/1473681698","team_only":false,"twitter_screen_name":"yaotti","website_url":"http://yaotti.hatenablog.com"},"page_views_count":null},{"rendered_body":"\u003cp\u003eGitにある程度慣れ，基本的な操作ができるようになるとより深く知りたくなってくると思いますが，そのときにググって分散した情報を読むのではなく，まとまったドキュメントを活用すると効率が良いです．\u003cbr\u003e\nまずは中級者向け\u003ccode\u003egit help\u003c/code\u003eについて．\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"git-help-help\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#git-help-help\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003egit help help\u003c/code\u003e\n\u003c/h1\u003e\n\n\u003cp\u003eまずは\u003ccode\u003egit help help\u003c/code\u003eをして，よく使う\u003ccode\u003egit help\u003c/code\u003eについてより良く知っておきましょう．\u003ccode\u003egit help\u003c/code\u003eの中でおすすめオプションは以下の2つ．\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"-w\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#-w\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003e-w\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eHTMLでのmanをブラウザで開く．長いmanを読むときなどは読みやすくて地味に便利\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"-g\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#-g\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003e-g\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eガイド一覧．特定のgitコマンドに縛られないような内容を見ることができます．\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"gitガイド\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#git%E3%82%AC%E3%82%A4%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003egitガイド\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ git help -g\nThe common Git guides are:\n\n   attributes   Defining attributes per path\n   glossary     A Git glossary\n   ignore       Specifies intentionally untracked files to ignore\n   modules      Defining submodule properties\n   revisions    Specifying revisions and ranges for Git\n   tutorial     A tutorial introduction to Git (for version 1.5.1 or newer)\n   workflows    An overview of recommended workflows with Git\n\n'git help -a' and 'git help -g' lists available subcommands and some\nconcept guides. See 'git help \u0026lt;command\u0026gt;' or 'git help \u0026lt;concept\u0026gt;'\nto read about a specific subcommand or concept.\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこの中でも特に \u003cstrong\u003eglossary\u003c/strong\u003e(用語集)や \u003cstrong\u003erevisions\u003c/strong\u003e(リビジョン(範囲)の指定方法一覧)は一度見ておくと，helpで利用される基本用語の意味や曖昧になりがちなrevision指定について整理できるのでおすすめです．例えば\u003ccode\u003eHEAD~\u003c/code\u003eと\u003ccode\u003eHEAD^\u003c/code\u003eや\u003ccode\u003emaster..branch\u003c/code\u003eと\u003ccode\u003emaster...branch\u003c/code\u003eの違いなど\u003cbr\u003e\n\u003ca href=\"https://raw.github.com/git/git/master/Documentation/RelNotes/1.8.5.txt\" rel=\"nofollow noopener\" target=\"_blank\"\u003eリリースされたばかりのv1.8.5\u003c/a\u003eで入った\u003ccode\u003e@\u003c/code\u003eの意味も\u003ccode\u003egit help revisions\u003c/code\u003eに書かれています(\u003ccode\u003eHEAD\u003c/code\u003eと同じ)．\u003c/p\u003e\n\n\u003cp\u003e(余談: \u003ccode\u003e..\u003c/code\u003eと\u003ccode\u003e...\u003c/code\u003eの使い分けの1つは\u003ca href=\"http://qiita.com/yaotti/items/ab52a7e834422a6f9662\" id=\"reference-b00d6b3a6bb60dbbc9b7\"\u003e現在のブランチで加えた変更を見る - Qiita\u003c/a\u003eを参考に)\u003cbr\u003e\n(余談その2: \u003ca href=\"http://article.gmane.org/gmane.comp.version-control.git/233960/\" rel=\"nofollow noopener\" target=\"_blank\"\u003ev1.8.5で入った\u003ccode\u003egit cherry-pick -\u003c/code\u003eのコミット\u003c/a\u003e ;))\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"pro-git\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#pro-git\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePro Git\u003c/h1\u003e\n\n\u003cp\u003eScott先生の書いた本．仕組みから各コマンドの使い方まで体系立ってまとめられているので一読をすすめます．\u003cbr\u003e\n特にchapter 9はGitの内部構造についてまとまって書かれた貴重な日本語情報源です．\u003cbr\u003e\n\u003ca href=\"http://git-scm.com/book/ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003ePro Git日本語版\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"git-ml\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#git-ml\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ca href=\"http://git-scm.com/community\" rel=\"nofollow noopener\" target=\"_blank\"\u003eGit ML\u003c/a\u003e\n\u003c/h1\u003e\n\n\u003cp\u003eGitの動きを知りたい場合．\u003cbr\u003e\n全部読むのはかなり気合入れないとつらい(たぶん無理…)．\u003cbr\u003e\n全体の動きを知りたいなら\u003ca href=\"https://github.com/gitster\" rel=\"nofollow noopener\" target=\"_blank\"\u003eHamanoさん\u003c/a\u003eが週1ぐらいで書いている\"What's cooking in git.git\"を読むと近いうちにこんなものが入るんだなーというのがわかる．\u003ca href=\"http://search.gmane.org/?query=What%27s+cooking+in+git.git\u0026amp;author=\u0026amp;group=gmane.comp.version-control.git\u0026amp;sort=date\u0026amp;DEFAULTOP=and\u0026amp;xP=what%27s%09Zcook%09git\u0026amp;xFILTERS=Gcomp.version-control.git-Ac-Ahamano-Ajunio---A\" rel=\"nofollow noopener\" target=\"_blank\"\u003earchive\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e以上，基本操作が出来るようになってからの理解を深めるのに役立つ情報源でした．\u003c/p\u003e\n","body":"Gitにある程度慣れ，基本的な操作ができるようになるとより深く知りたくなってくると思いますが，そのときにググって分散した情報を読むのではなく，まとまったドキュメントを活用すると効率が良いです．\nまずは中級者向け`git help`について．\n\n# `git help help`\n\nまずは`git help help`をして，よく使う`git help`についてより良く知っておきましょう．`git help`の中でおすすめオプションは以下の2つ．\n\n## `-w`\nHTMLでのmanをブラウザで開く．長いmanを読むときなどは読みやすくて地味に便利\n\n## `-g`\nガイド一覧．特定のgitコマンドに縛られないような内容を見ることができます．\n\n## gitガイド\n\n```\n$ git help -g\nThe common Git guides are:\n\n   attributes   Defining attributes per path\n   glossary     A Git glossary\n   ignore       Specifies intentionally untracked files to ignore\n   modules      Defining submodule properties\n   revisions    Specifying revisions and ranges for Git\n   tutorial     A tutorial introduction to Git (for version 1.5.1 or newer)\n   workflows    An overview of recommended workflows with Git\n\n'git help -a' and 'git help -g' lists available subcommands and some\nconcept guides. See 'git help \u003ccommand\u003e' or 'git help \u003cconcept\u003e'\nto read about a specific subcommand or concept.\n```\n\nこの中でも特に **glossary**(用語集)や **revisions**(リビジョン(範囲)の指定方法一覧)は一度見ておくと，helpで利用される基本用語の意味や曖昧になりがちなrevision指定について整理できるのでおすすめです．例えば`HEAD~`と`HEAD^`や`master..branch`と`master...branch`の違いなど\n[リリースされたばかりのv1.8.5](https://raw.github.com/git/git/master/Documentation/RelNotes/1.8.5.txt)で入った`@`の意味も`git help revisions`に書かれています(`HEAD`と同じ)．\n\n(余談: `..`と`...`の使い分けの1つは[現在のブランチで加えた変更を見る - Qiita](http://qiita.com/yaotti/items/ab52a7e834422a6f9662)を参考に)\n(余談その2: [v1.8.5で入った`git cherry-pick -`のコミット](http://article.gmane.org/gmane.comp.version-control.git/233960/) ;))\n\n# Pro Git\nScott先生の書いた本．仕組みから各コマンドの使い方まで体系立ってまとめられているので一読をすすめます．\n特にchapter 9はGitの内部構造についてまとまって書かれた貴重な日本語情報源です．\n[Pro Git日本語版](http://git-scm.com/book/ja)\n\n# [Git ML](http://git-scm.com/community)\nGitの動きを知りたい場合．\n全部読むのはかなり気合入れないとつらい(たぶん無理…)．\n全体の動きを知りたいなら[Hamanoさん](https://github.com/gitster)が週1ぐらいで書いている\"What's cooking in git.git\"を読むと近いうちにこんなものが入るんだなーというのがわかる．[archive](http://search.gmane.org/?query=What%27s+cooking+in+git.git\u0026author=\u0026group=gmane.comp.version-control.git\u0026sort=date\u0026DEFAULTOP=and\u0026xP=what%27s%09Zcook%09git\u0026xFILTERS=Gcomp.version-control.git-Ac-Ahamano-Ajunio---A)\n\n\n以上，基本操作が出来るようになってからの理解を深めるのに役立つ情報源でした．","coediting":false,"comments_count":0,"created_at":"2013-12-04T23:30:17+09:00","group":null,"id":"5b70c9f9d882f6f10023","likes_count":302,"private":false,"reactions_count":0,"tags":[{"name":"Git","versions":[]}],"title":"ある程度Gitを操作できるようになってから当たると良いマニュアル/情報源","updated_at":"2013-12-04T23:30:17+09:00","url":"https://qiita.com/yaotti/items/5b70c9f9d882f6f10023","user":{"description":"Qiitaを作っているIncrements株式会社の創業者、CEO、エンジニア","facebook_id":"yaotti","followees_count":273,"followers_count":956,"github_login_name":"yaotti","id":"yaotti","items_count":151,"linkedin_id":"yaotti","location":"東京","name":"海野 弘成","organization":"Increments inc","permanent_id":1,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/1/profile-images/1473681698","team_only":false,"twitter_screen_name":"yaotti","website_url":"http://yaotti.hatenablog.com"},"page_views_count":null}]